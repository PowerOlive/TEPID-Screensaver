group 'ca.mcgill.sus.screensaver'
version '3.2.4'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$KOTLIN"
        classpath "ca.mcgill:tepid-commons:$TEPID_COMMONS"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'ca.mcgill.science.tepid.commons'

ext {
    // can be passed with -Ptepid_config_dir=CONFIG_DIR, or set in an environment variable "tepid_config_dir
    if (! project.hasProperty('tepid_config_dir')){
        tepid_config_dir = "$System.env.tepid_config_dir"
    }
    if (! project.hasProperty('tepid_config_dir')){
        throw new GradleException('tepid_config_dir not found')
    }
}


sourceCompatibility = JVM_TARGET
targetCompatibility = JVM_TARGET

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    testCompile "junit:junit:$JUNIT"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$KOTLIN"
    testCompile 'pl.pragmatists:JUnitParams:1.1.1'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$KOTLIN"
    compile "org.jetbrains.kotlin:kotlin-reflect:$KOTLIN"

    compile "ca.mcgill.tepid-commons:core:$TEPID_COMMONS"
    compile "ca.mcgill.tepid-commons:models:$TEPID_COMMONS"
    compile "ca.mcgill.tepid-commons:utils:$TEPID_COMMONS"

    compile fileTree(dir: 'lib', include: '*.jar')

}

jar.baseName = 'ctfscreen'

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources", "config"
        }
    }
}

task copyConfigs(type: Copy) {
    from "$tepid_config_dir/URL.properties", "$tepid_config_dir/screensaver.properties"
    into "config"
}

task copyRunner(type: Copy) {
    into "$buildDir/libs"
    from "windows"
}

task copyLibs(type: Copy) {
    into "$buildDir/libs/ctfscreen-data"
    from configurations.runtime
}

task windowsJar(type: Jar) {
    from('config') {
        include '*.properties'
    }
	from sourceSets.main.output
	destinationDir = file("$buildDir/libs/ctfscreen-data")
	baseName = 'ctfscreen'
}

task windows(type: GradleBuild) {
    tasks = ['windowsJar', 'copyRunner', 'copyLibs', 'copyConfigs']
    group 'build'
}

task msi(type: Exec) {
	dependsOn "windows"
    workingDir "$buildDir/libs"
    environment "PRODUCTVERSION", version
    commandLine "cmd","/c","wix.bat"
    group 'build'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = JVM_TARGET
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = JVM_TARGET
    }
}